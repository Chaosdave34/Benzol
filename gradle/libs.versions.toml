[versions]
androidx-lifecycle = "2.8.4"
compose-multiplatform = "1.7.3"
# junit = "4.13.2"
kotlin = "2.1.20"
kotlinx-coroutines = "1.10.1"
ktor = "3.1.1"
kotlinx-html = "0.12.0"
kotlinx-serialization = "1.8.0"

openhtmltopdf = "1.0.10"
hot-reload = "1.0.0-alpha04"
ksoup = "0.2.2"
russhwolf-multiplatform-settings = "1.3.0"

[libraries]
# kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
# kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
# junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinx-html" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

openhtmltopdf-core = { module = "com.openhtmltopdf:openhtmltopdf-core", version.ref = "openhtmltopdf" }
openhtmltopdf-pdfbox = { module = "com.openhtmltopdf:openhtmltopdf-pdfbox", version.ref = "openhtmltopdf" }
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref = "ksoup" }
russhwolf-multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "russhwolf-multiplatform-settings" }

[plugins]
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
hotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "hot-reload" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-content-negotiation", "ktor-client-serialization-kotlinx-json"]
openhtmltopdf-common = ["openhtmltopdf-core", "openhtmltopdf-pdfbox"]